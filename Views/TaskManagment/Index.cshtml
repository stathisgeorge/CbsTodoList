@model List<DataAccess.Data.Models.TaskRecord>

@{
    // Check if the model has any elements
    var tasksJson = Newtonsoft.Json.JsonConvert.SerializeObject(Model);

    if (Model.Count == 0)
    {
        // If the model is empty, display a message
        <h1>Δεν υπάρχουν εγγραφές</h1>
    }
    else
    {
        var completedTasks = Model.Where(t => t.Status == DataAccess.Data.Status.Completed).ToList();
        var pendingTasks = Model.Where(t => t.Status == DataAccess.Data.Status.Pending).ToList();
        // If the model has elements, display the tasks in two separate sections
        // First section
        <div class="container-fluid">
            <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                <button class="btn btn-success btn-lg float-left" onclick="add()">Add Task</button>
            </div>

            @if (pendingTasks != null)
            {
                @await Html.PartialAsync("_UncompletedTasksPartial",pendingTasks);
            }

            @if(completedTasks!=null){
                @await Html.PartialAsync("_CompletedTasksPartial",completedTasks);
            }
        </div> 
    }
}

<div class="modal fade" id="taskModalForm" tabindex="-1" role="dialog" aria-labelledby="taskModalFormTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modal-Title">Modal title</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @await Html.PartialAsync("_AddTaskPartial")
            </div>
        </div>
    </div>
</div> 

@section Scripts {

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>

        $(document).ready(function () {
            // Initialize collapse functionality
            $('.task-title').click(function () {
                $(this).next('.collapse').collapse('toggle');
            });
            var tasksJson = @Html.Raw(Json.Serialize(tasksJson));

            localStorage.setItem('tasks', tasksJson);

        });

        function completeStatus(taskId) {
            console.log('CompleteStatus');
            $.ajax({
                type: "PUT",
                url: "@Url.Action("ChangeTaskStatus", "TaskManagment")",
                data: { id: taskId },
                success: function (data) {
                    console.log('success'); 
                },
                error: function (error) {
                    console.log('error', error);
                }
            });
        }

    </script>
}
